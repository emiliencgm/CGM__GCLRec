==========config==========
{'adaloss_mode': 'pos',
 'adaptive_method': 'mlp',
 'alpha': 0.5,
 'augment': 'No',
 'batch_size': 2048,
 'c': 'testing',
 'centroid_mode': 'eigenvector',
 'comment': '_',
 'commonNeighbor_mode': 'SC',
 'cores': 10,
 'dataset': 'yelp2018',
 'device': device(type='cuda'),
 'early_stop_steps': 50,
 'epochs': 500,
 'freeze_mlp': 500,
 'group': 'Ours',
 'if_adaptive': 1,
 'if_double_label': 1,
 'if_multicore': 1,
 'if_projector': 0,
 'if_tsne': 1,
 'if_valid': 1,
 'if_visual': 0,
 'init_method': 'Normal',
 'job_type': 'yelp2018',
 'lambda1': 0.1,
 'latent_dim_rec': 64,
 'loss': 'Adaptive',
 'lr': 0.001,
 'model': 'LightGCN',
 'n_cluster': 10,
 'name': 'mixup',
 'notes': '3InfoNCE',
 'num_layers': 3,
 'perplexity': 50,
 'pop_group': 10,
 'project': 'GCLRec_Valid',
 'sampling': 'uiij',
 'seed': 2023,
 'sigma_gausse': 1.0,
 'tag': ['mixup'],
 'temp_tau': 0.1,
 'test_u_batch_size': 2048,
 'topks': [20, 40],
 'tsne_group': [0, 9],
 'tsne_points': 2000,
 'visual_epoch': 3,
 'weight_decay': 0.0001}
==========config==========
[0;30;43m[DATALOADER--START][0m
loading [/home/cgm/code/CGM__GCLRec/data/yelp2018]
31668 users and 38048 items
1093508 interactions for training
324147 interactions for testing
yelp2018 Sparsity : 0.0011765708510383113
yelp2018 is ready to go
[0;30;43m[DATALOADER--END][0m
[0;30;43m[PRECALCULATE--START][0m
Loading Eigenvector.pt from /home/cgm/code/CGM__GCLRec/pyg_code/precalculate/yelp2018/EigenvectorCentroid
eigenvector_centrality cost:  0.0007998943328857422
Loading CommonNeighbor_sp.pt from /home/cgm/code/CGM__GCLRec/pyg_code/precalculate/yelp2018/CommonNeighbor/SC
CN_simi_unsymmetry_mat_sp cost:  0.09394192695617676
shape test : 2474518 == 2187016
precal cost :  0.6974081993103027
[0;30;43m[PRECALCULATE--END][0m
[0;30;43m[SAMPLER--START][0m
[0;30;43m[SAMPLER--END][0m
user:31668, item:38048
[0;30;43muse NORMAL distribution UI for Embedding[0m
GCL Model is ready to go!
[0;30;43m[TRAIN][0m
EPOCH[0]:loss 5.666
[0;30;43m[valid][0m
VALID {'precision': array([0.01275736, 0.01023036]), 'recall': array([0.0588873 , 0.09445074]), 'ndcg': array([0.03608648, 0.04669303])}
[5;37;44mfind a better valid recall[0m [0;37;44m0.058887302482926[0m [0;37;44m++0.058887302482926[0m
[0;30;43m[TEST][0m
{'precision': array([0.01799293, 0.01543988]), 'recall': array([0.03846295, 0.06578297]), 'recall_pop': {0: array([3.94720222e-05, 1.34204876e-04]), 1: array([4.76450527e-05, 4.05524721e-04]), 2: array([0.00016315, 0.00044314]), 3: array([0.00052366, 0.00158023]), 4: array([0.00061682, 0.00191478]), 5: array([0.00105311, 0.00347312]), 6: array([0.00280493, 0.00767302]), 7: array([0.00698246, 0.01529532]), 8: array([0.01846432, 0.03930167]), 9: array([0.08604551, 0.13544195])}, 'recall_pop_Contribute': {0: array([1.08266118e-05, 3.43527317e-05]), 1: array([8.24562199e-06, 6.80006072e-05]), 2: array([2.95795247e-05, 7.12382764e-05]), 3: array([7.31685587e-05, 2.52550101e-04]), 4: array([9.88533784e-05, 2.95709892e-04]), 5: array([0.00018016, 0.00059495]), 6: array([0.00048811, 0.00132112]), 7: array([0.00132518, 0.00291227]), 8: array([0.00405457, 0.00862564]), 9: array([0.03219425, 0.05160714])}, 'ndcg': array([0.03136585, 0.04171453])}
[5;37;44mfind a better recall[0m [0;37;44m0.03846294779450383[0m [0;37;44m++0.03846294779450383[0m
total time cost of epoch 0:  69.07452845573425
[0;30;43m[TRAIN][0m
[0;30;43mtesting[0m
